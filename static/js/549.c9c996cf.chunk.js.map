{"version":3,"file":"static/js/549.c9c996cf.chunk.js","mappings":"wPAEaA,EAAUC,EAAAA,GAAAA,EAAH,uFAEJ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,CAA1B,IACL,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,IAA5B,IAGRC,EAAeP,EAAAA,GAAAA,GAAH,4HAQZQ,EAAeR,EAAAA,GAAAA,GAAH,0CACb,SAAAC,GAAK,OAAIA,EAAMC,MAAMO,MAAM,EAAtB,I,6BCsDjB,EArEe,SAAC,GAiCZ,IAjCqT,IAAvSC,EAAuS,EAAvSA,IAAKC,EAAkS,EAAlSA,gBAAiBC,EAAiR,EAAjRA,SAAUC,EAAuQ,EAAvQA,QAASC,EAA8P,EAA9PA,OAAQC,EAAsP,EAAtPA,MAAOC,EAA+O,EAA/OA,SAAUC,EAAqO,EAArOA,OAAQC,EAA6N,EAA7NA,OAAQC,EAAqN,EAArNA,YAAaC,EAAwM,EAAxMA,WAAYC,EAA4L,EAA5LA,UAAWC,EAAiL,EAAjLA,GAAIC,EAA6K,EAA7KA,YAAaC,EAAgK,EAAhKA,WAAYC,EAAoJ,EAApJA,QAASC,EAA2I,EAA3IA,MAAOC,EAAoI,EAApIA,UAAWC,EAAyH,EAAzHA,MAAOC,EAAkH,EAAlHA,UAAWC,EAAuG,EAAvGA,eAAgBC,EAAuF,EAAvFA,KAAMC,EAAiF,EAAjFA,OAAQC,EAAyE,EAAzEA,QAASC,EAAgE,EAAhEA,WAAYC,EAAoD,EAApDA,eAAgBC,EAAoC,EAApCA,oBAAqBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACrSC,EAAeC,IAAa,CAC9BH,IAAKA,GAAO3B,EACZsB,OAAQA,GAAU,KAClBS,MAAO,CACH7B,SAAUA,GAAY,KACtBC,QAASA,GAAW,UACpBG,SAAUA,GAAY,MAE1BK,UAAWA,GAAa,KACxBe,oBAAqBA,GAAuB,KAC5CF,WAAYA,GAAc,KAC1BT,QAAUA,IAAW,OAAIA,GAASiB,KAAK,MAAS,KAChDT,QAASA,GAAW,KACpBhB,OAAQA,GAAU,KAClBc,KAAMA,GAAQ,KACdJ,UAAWA,GAAa,KACxBhB,gBAAiB,kBACjBwB,eAAgBA,GAAkB,KAClCP,MAAOA,GAAS,KAChBF,MAAOA,GAAS,KAChBJ,GAAIA,GAAM,KACV,kBAAmBQ,GAAkB,KACrC,cAAeN,GAAc,KAC7B,aAAcK,GAAa,KAC3Bd,MAAOA,GAAS,KAChBD,OAAQA,GAAU,KAClBI,OAAQA,GAAU,KAClBC,YAAaA,GAAe,KAC5BC,WAAYA,GAAc,KAC1BkB,IAAKA,GAAO,WAEZrC,EAAQ0C,OAAOC,OAAO,MAC1B,MAAiBD,OAAOE,KAAKN,GAA7B,eAA4C,CAAvC,IAAIO,EAAI,KACiB,MAAtBP,EAAaO,KACb7C,EAAM6C,GAAQP,EAAaO,GAElC,CACD,cAAcH,OAAOE,KAAK5C,EAAMwC,OAAhC,eAAwC,CAAnC,IAAIM,EAAC,KACgB,MAAlB9C,EAAMwC,MAAMM,WACL9C,EAAMwC,MAAMM,EAE1B,CACD,GAAI9C,EAAMgB,OACN,cAAgB0B,OAAOE,KAAK5C,EAAMgB,QAAlC,eAA2C,CAAtC,IAAIqB,EAAG,KACJrC,EAAMgB,OAAO+B,eAAeV,KAC5BrC,EAAMwC,MAAMH,GAAOrC,EAAMgB,OAAOqB,IAEhCK,OAAOE,KAAK5C,EAAMgB,QAAQgC,OAASX,UAC5BrC,EAAMgB,MAEpB,CAEL,GAAIN,EACA,GAAI,UAAWV,EAAO,CAClB,IAAMiD,EAAejD,EAAMyB,MAAMyB,QAAQ,aAAc,IACvDlD,EAAMyB,MAAQ,qBAAcwB,EAAaE,QAASA,MACrD,MAEGnD,EAAMyB,MAAQ,aAQtB,OALIH,GAAe,IACVtB,EAAMwC,MAAMO,eAAe,YAC5B/C,EAAMwC,MAAMY,OAAS9B,IAGtB+B,EAAAA,cAAoB,SAAUX,OAAOY,OAAO,CAAC,EAAGtD,GAC1D,E,SClEYuD,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACzB,SAAClD,EAAD,UACOkD,EAAaC,KAAI,gBAAEpC,EAAF,EAAEA,GAAIgB,EAAN,EAAMA,IAAN,OAChB,SAAC9B,EAAD,WACE,SAAC,EAAD,CACEE,IAAG,wCAAmC4B,GACtCvB,MAAM,QACND,OAAO,WAJQQ,EADH,KAFC,E,UCyB3B,EAtBiB,WACf,OAAgCqC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,YAEVI,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GACJR,EAAYQ,GACZN,EAAU,WACX,IACAO,OAAM,kBAAMP,EAAU,WAAhB,GACV,GAAE,CAACC,IAEW,YAAXF,GAA6B,SAACS,EAAA,EAAD,IAClB,aAAXT,GAA8B,SAAC/D,EAAD,sGACnB,aAAX+D,GAA6C,IAApBF,EAASY,QAAqB,SAACzE,EAAD,wDAC5C,aAAX+D,GAA8B,SAACN,EAAD,CAAaC,aAAcG,SAA7D,CACD,C,qOClBM,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBC,EAAAA,GAAAA,IAAU,uBAAwB,CACvDC,QAAO,kBAAMD,EAAAA,GAAAA,SAAAA,QAAP,IAA8BD,KAAAA,MAFjC,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAyBC,EAAMN,GAA/B,uFACkBC,EAAAA,GAAAA,IAAA,+BAAkCK,GAAQ,CAC/DJ,QAAO,kBAAMD,EAAAA,GAAAA,SAAAA,QAAP,IAA8BK,MAAOA,EAAON,KAAAA,MAF/C,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjB,GAA/B,yFACkBW,EAAAA,GAAAA,IAAA,iBAAoBX,IADtC,uBACGc,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBlB,GAAvB,yFACkBW,EAAAA,GAAAA,IAAA,iBAAoBX,EAApB,aADlB,uBACGc,EADH,EACGA,KADH,kBAEEA,EAAKK,MAFP,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BpB,GAA1B,yFACkBW,EAAAA,GAAAA,IAAA,iBAAoBX,EAApB,aADlB,uBACGc,EADH,EACGA,KADH,kBAEEA,EAAKO,SAFP,kEAKA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,yFACqBW,EAAAA,GAAAA,IAAA,iBAAoBX,EAApB,YADrB,uBACKc,EADL,EACKA,KADL,kBAEIA,EAAKO,SAFT,kEAnCPV,EAAAA,GAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,GAAAA,SAAAA,OAAwB,CACtBW,QAJU,mC","sources":["components/Trailer/Trailer.styled.jsx","../node_modules/react-iframe/dist/es/iframe.js","components/Trailer/TrailerList.jsx","components/Trailer/Trailer.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n  font-size:  ${props => props.theme.fontSizes.l};\n  font-weight:${props => props.theme.fontWeights.bold};\n`;\n\nexport const TrailersList = styled.ul`\n  list-style: none;\n  display: flex;\n  max-width: 1200px;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n\nexport const TrailersItem = styled.li`\n  margin: ${props => props.theme.space[3]}px;\n`;\n\n","import React from \"react\";\nimport objectAssign from \"object-assign\";\nconst Iframe = ({ url, allowFullScreen, position, display, height, width, overflow, styles, onLoad, onMouseOver, onMouseOut, scrolling, id, frameBorder, ariaHidden, sandbox, allow, className, title, ariaLabel, ariaLabelledby, name, target, loading, importance, referrerpolicy, allowpaymentrequest, src, key }) => {\n    const defaultProps = objectAssign({\n        src: src || url,\n        target: target || null,\n        style: {\n            position: position || null,\n            display: display || \"initial\",\n            overflow: overflow || null\n        },\n        scrolling: scrolling || null,\n        allowpaymentrequest: allowpaymentrequest || null,\n        importance: importance || null,\n        sandbox: (sandbox && [...sandbox].join(\" \")) || null,\n        loading: loading || null,\n        styles: styles || null,\n        name: name || null,\n        className: className || null,\n        allowFullScreen: \"allowFullScreen\" || null,\n        referrerpolicy: referrerpolicy || null,\n        title: title || null,\n        allow: allow || null,\n        id: id || null,\n        \"aria-labelledby\": ariaLabelledby || null,\n        \"aria-hidden\": ariaHidden || null,\n        \"aria-label\": ariaLabel || null,\n        width: width || null,\n        height: height || null,\n        onLoad: onLoad || null,\n        onMouseOver: onMouseOver || null,\n        onMouseOut: onMouseOut || null,\n        key: key || \"iframe\"\n    });\n    let props = Object.create(null);\n    for (let prop of Object.keys(defaultProps)) {\n        if (defaultProps[prop] != null) {\n            props[prop] = defaultProps[prop];\n        }\n    }\n    for (let i of Object.keys(props.style)) {\n        if (props.style[i] == null) {\n            delete props.style[i];\n        }\n    }\n    if (props.styles) {\n        for (let key of Object.keys(props.styles)) {\n            if (props.styles.hasOwnProperty(key)) {\n                props.style[key] = props.styles[key];\n            }\n            if (Object.keys(props.styles).pop() == key) {\n                delete props.styles;\n            }\n        }\n    }\n    if (allowFullScreen) {\n        if (\"allow\" in props) {\n            const currentAllow = props.allow.replace(\"fullscreen\", \"\");\n            props.allow = `fullscreen ${currentAllow.trim()}`.trim();\n        }\n        else {\n            props.allow = \"fullscreen\";\n        }\n    }\n    if (frameBorder >= 0) {\n        if (!props.style.hasOwnProperty(\"border\")) {\n            props.style.border = frameBorder;\n        }\n    }\n    return React.createElement(\"iframe\", Object.assign({}, props));\n};\nexport default Iframe;\n","import PropTypes from 'prop-types';\nimport { TrailersList, TrailersItem } from './Trailer.styled';\nimport Iframe from 'react-iframe';\n\nexport const TrailerList = ({ trailersData }) => (\n  <TrailersList>\n        {trailersData.map(({id, key}) => (\n          <TrailersItem key={id}>\n            <Iframe\n              url={`https://www.youtube.com/embed/${key}`}\n              width=\"350px\"\n              height=\"250px\"\n            />\n          </TrailersItem>\n        ))}\n  </TrailersList>\n);\n\nTrailerList.propTypes = {\n   trailersData: PropTypes.array.isRequired,\n};\n\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getTrailer } from '../../utils/api';\nimport { TrailerList } from './TrailerList';\nimport { Loader } from '../Loader/Loader';\nimport { Message } from './Trailer.styled';\n\nconst Trailers = () => {\n  const [trailers, setTrailers] = useState(null);\n  const [status, setStatus] = useState(null); \n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n      \n    getTrailer(movieId)\n      .then(result => {\n        setTrailers(result);\n        setStatus('resolved');\n      })\n      .catch(() => setStatus('rejected'));\n  }, [movieId]);\n\n  if (status === 'pending') return <Loader />;\n  if (status === 'rejected') return <Message>Щось пішло не так</Message>;\n  if (status === 'resolved' && trailers.length === 0) return <Message>We don`t have any trailers for this movie</Message>;\n  if (status === 'resolved') return <TrailerList trailersData={trailers} />;\n};\n\nexport default Trailers;","import axios from 'axios';\n\nconst KEY = '324a07cbf11f3aed45ef70fac807eb23';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport async function getPopularMovies(page) {\n  const response = await axios.get('/trending/movie/week', {\n    params: { ...axios.defaults.params, page },\n  })\n  return response.data;\n}\n\nexport async function getMovies(query,page) {\n  const response = await axios.get(`/search/movie?&query=${query}`,{\n    params: { ...axios.defaults.params, query: query, page},\n  });\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n}\n\nexport async function getCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n}\n\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n}\n\nexport async function getTrailer(movieId) {\n    const { data }  = await axios.get(`/movie/${movieId}/videos`);\n    return data.results;\n}"],"names":["Message","styled","props","theme","fontSizes","l","fontWeights","bold","TrailersList","TrailersItem","space","url","allowFullScreen","position","display","height","width","overflow","styles","onLoad","onMouseOver","onMouseOut","scrolling","id","frameBorder","ariaHidden","sandbox","allow","className","title","ariaLabel","ariaLabelledby","name","target","loading","importance","referrerpolicy","allowpaymentrequest","src","key","defaultProps","objectAssign","style","join","Object","create","keys","prop","i","hasOwnProperty","pop","currentAllow","replace","trim","border","React","assign","TrailerList","trailersData","map","useState","trailers","setTrailers","status","setStatus","movieId","useParams","useEffect","getTrailer","then","result","catch","Loader","length","getPopularMovies","page","axios","params","response","data","getMovies","query","getMovieDetails","getCast","cast","getReviews","results","api_key"],"sourceRoot":""}