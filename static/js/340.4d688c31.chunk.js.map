{"version":3,"file":"static/js/340.4d688c31.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/ReviewsList.jsx","components/Reviews/Reviews.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n  font-size:  ${props => props.theme.fontSizes.l};\n  font-weight:${props => props.theme.fontWeights.bold};\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: ${props => props.theme.space[3]}px;\n  font-size:  ${props => props.theme.fontSizes.m};\n  border: 1px solid black;\n  margin-bottom:${props => props.theme.space[3]}px;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  font-weight:${props => props.theme.fontWeights.bold};\n`;\n\nexport const Review = styled.p`\n  font-size:  ${props => props.theme.fontSizes.s};\n`;\n\nexport const Data = styled.p`\n  font-weight:${props => props.theme.fontWeights.bold};\n`;","import PropTypes from 'prop-types';\nimport {\n  ReviewList,\n  ReviewItem,\n  Data,\n  Author,\n  Review,\n} from './Reviews.styled';\n\nexport const ReviewsList = ({ reviewsData }) => (\n  <ReviewList>\n    {reviewsData.map(({ id, created_at, author, content }) => (\n    <ReviewItem key={id}>\n        <Data>{new Date(created_at).toLocaleDateString('en-US')}</Data>\n        <Author>{`Author: ${author}`} </Author>    \n        <Review>{content}</Review>\n    </ReviewItem>\n    ))}\n  </ReviewList>\n);\n\nReviewsList.propTypes = {\n  reviewsData: PropTypes.array.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../utils/api';\nimport { ReviewsList } from './ReviewsList';\nimport { Loader } from '../Loader/Loader';\nimport { Message } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState(null); \n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n      \n    getReviews(movieId)\n      .then(result => {\n        setReviews(result);\n        setStatus('resolved');\n      })\n      .catch(() => setStatus('rejected'));\n  }, [movieId]);\n\n  if (status === 'pending') return <Loader />;\n  if (status === 'rejected') return <Message>Щось пішло не так</Message>;\n  if (status === 'resolved' && reviews.length === 0) return <Message>We don`t have any reviews for this movie</Message>;\n  if (status === 'resolved') return <ReviewsList reviewsData={reviews} />;\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst KEY = '324a07cbf11f3aed45ef70fac807eb23';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport async function getPopularMovies() {\n  const { data } = await axios.get('/trending/movie/week');\n  return data.results;\n}\n\nexport async function getMovies(query) {\n  const { data } = await axios.get(`/search/movie?&query=${query}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n}\n\nexport async function getCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n}\n\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n}"],"names":["Message","styled","props","theme","fontSizes","l","fontWeights","bold","ReviewList","ReviewItem","space","m","Author","Review","s","Data","ReviewsList","reviewsData","map","id","created_at","author","content","Date","toLocaleDateString","useState","reviews","setReviews","status","setStatus","movieId","useParams","useEffect","getReviews","then","result","catch","Loader","length","getPopularMovies","axios","data","results","getMovies","query","getMovieDetails","getCast","cast","api_key"],"sourceRoot":""}