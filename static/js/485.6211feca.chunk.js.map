{"version":3,"file":"static/js/485.6211feca.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListStyle = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  justify-content:center;\n  position: relative;\n  margin-right:${props => props.theme.space[5]}px;\n  margin-bottom:${props => props.theme.space[4]}px;\n  background-color: ${props => props.theme.colors.lightGrey};\n  border-radius: ${props => props.theme.radii.normal};\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: ${props => props.theme.shadows.normal};\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  width: 260px;\n  padding-bottom:${props => props.theme.space[4]}px;\n  font-size:  ${props => props.theme.fontSizes.s};\n  font-weight:${props => props.theme.fontWeights.bold};\n  color:${props => props.theme.colors.text};\n`;\n\nexport const Image = styled.img`\n   display: block;\n   width: 100%;\n   margin-bottom:${props => props.theme.space[4]}px;\n`;\n\nexport const Rating = styled.span`\n   display: block;\n   position:absolute;\n   left:10px;\n   top:10px;\n   width:30px;\n   margin-bottom:${props => props.theme.space[4]}px;\n   padding:${props => props.theme.space[2]}px;\n   border-radius: ${props => props.theme.radii.normal};\n   color: ${({ rating }) => (rating >= 3 && rating <= 7 ? 'text' : 'white')};\n\n   background-color: ${({ rating }) => {\n    if (rating > 7) {\n      return 'green';\n    }\n    if (rating >= 3 && rating <= 7) {\n      return 'yellow';\n    }\n    return 'red';\n  }};\n`;\n\nexport const Title = styled.p`\n   display: block;\n   margin-bottom:${props => props.theme.space[4]}px;\n   font-size:  ${props => props.theme.fontSizes.s};\n`;","import { useLocation } from 'react-router-dom';\nimport { Item, MovieLink, Image, Title, Rating } from './MoviesList.styled';\nimport noImage from '../../images/noImage.PNG';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ movie: { id, poster_path, original_title, vote_average, release_date} }) => {\n  const location = useLocation();\n  const releaseDate = release_date ? release_date.slice(0, 4) : 'дати немає';\n  \n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={location}>\n        <Image src={poster_path ? `https://image.tmdb.org/t/p/w342${poster_path}`: noImage} alt={original_title}/>\n        <Title>{`${original_title} (${releaseDate})`}</Title>\n        <Rating rating={vote_average.toFixed(2)}> {vote_average.toFixed(2)}</Rating>\n      </MovieLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n  }).isRequired,\n};","import { MovieItem } from './MovieItem';\nimport { MoviesListStyle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ moviesData }) => {\n    return (\n        <MoviesListStyle>\n            {moviesData.map(movie => (\n                <MovieItem key={movie.id} movie={movie} />\n            ))}\n        </MoviesListStyle>\n    );\n};\n\nMoviesList.propTypes = {\n  moviesData: PropTypes.array.isRequired,\n};","import ReactPaginate from 'react-paginate';\nimport './Pagination.css';\n\nfunction PaginatedItems ({ totalPages, setPage, currentPage }) {\n  const handlePageClick = event => {\n    setPage({ page: event.selected + 1 });\n  };\n\n  return (\n    <>\n        <ReactPaginate\n            pageCount={totalPages}\n            forcePage={currentPage} \n            onPageChange={handlePageClick}\n            nextLabel=\"Next>\"\n            previousLabel=\"<Previous\" \n            breakLabel=\"...\"\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={4}\n            containerClassName=\"pagination\" \n            activeClassName=\"active\"\n            breakClassName=\"item\"\n            breakLinkClassName=\"link\"\n            pageClassName=\"item\"\n            pageLinkClassName=\"link\"\n            previousClassName=\"item\"\n            previousLinkClassName=\"link\"\n            nextClassName=\"item\"\n            nextLinkClassName=\"link\"\n            renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nexport default PaginatedItems;","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size:  ${props => props.theme.fontSizes.l};\n`;\n\nexport const ErrorMessage = styled.p`\n  text-align: center;\n  font-size:  ${props => props.theme.fontSizes.l};\n  font-weight:${props => props.theme.fontWeights.bold};\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPopularMovies } from '../../utils/api';\nimport { Box } from \"../../components/Box/Box\";\nimport { Title, ErrorMessage } from './Home.styled';\nimport { MoviesList } from '../../components/MoviesList/MoviesList'\nimport PaginatedItems from '../../components/Pagination/Pagination';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const pageParams = Number(searchParams.get('page') ?? 1);\n\n  useEffect(() => {\n    setStatus('pending');\n    getPopularMovies(pageParams)\n      .then(result => {\n        setPopularMovies(result);\n        setStatus('resolved');\n      })\n      .catch(() => setStatus('rejected'));\n  }, [pageParams]);\n\n  return (\n    <Box>\n        <Title>Popular Movies</Title>\n        {status === 'pending' && <Loader />}\n        {status === 'rejected' && (<ErrorMessage>Щось пішло не так</ErrorMessage>)}\n        {status === 'resolved' && <MoviesList moviesData={popularMovies.results} />}\n        {status === 'resolved' && (<PaginatedItems setPage={setSearchParams} totalPages={popularMovies.total_pages} currentPage={pageParams - 1}/>)}\n    </Box>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst KEY = '324a07cbf11f3aed45ef70fac807eb23';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport async function getPopularMovies(page) {\n  const response = await axios.get('/trending/movie/week', {\n    params: { ...axios.defaults.params, page },\n  })\n  return response.data;\n}\n\nexport async function getMovies(query,page) {\n  const response = await axios.get(`/search/movie?&query=${query}`,{\n    params: { ...axios.defaults.params, query: query, page},\n  });\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n}\n\nexport async function getCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n}\n\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n}\n\nexport async function getTrailer(movieId) {\n    const { data }  = await axios.get(`/movie/${movieId}/videos`);\n    return data.results;\n}"],"names":["MoviesListStyle","styled","Item","props","theme","space","colors","lightGrey","radii","normal","shadows","MovieLink","Link","fontSizes","s","fontWeights","bold","text","Image","Rating","rating","Title","MovieItem","movie","id","poster_path","original_title","vote_average","release_date","location","useLocation","releaseDate","slice","to","state","src","noImage","alt","toFixed","MoviesList","moviesData","map","totalPages","setPage","currentPage","pageCount","forcePage","onPageChange","event","page","selected","nextLabel","previousLabel","breakLabel","pageRangeDisplayed","marginPagesDisplayed","containerClassName","activeClassName","breakClassName","breakLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","renderOnZeroPageCount","l","ErrorMessage","useState","popularMovies","setPopularMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","pageParams","Number","get","useEffect","getPopularMovies","then","result","catch","Box","Loader","results","total_pages","axios","params","response","data","getMovies","query","getMovieDetails","movieId","getCast","cast","getReviews","getTrailer","api_key"],"sourceRoot":""}