{"version":3,"file":"static/js/720.fbae0d66.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListStyle = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  justify-content:center;\n  position: relative;\n  margin-right:${props => props.theme.space[5]}px;\n  margin-bottom:${props => props.theme.space[4]}px;\n  background-color: ${props => props.theme.colors.lightGrey};\n  border-radius: ${props => props.theme.radii.normal};\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: ${props => props.theme.shadows.normal};\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  width: 260px;\n  padding-bottom:${props => props.theme.space[4]}px;\n  font-size:  ${props => props.theme.fontSizes.s};\n  font-weight:${props => props.theme.fontWeights.bold};\n  color:${props => props.theme.colors.text};\n`;\n\nexport const Image = styled.img`\n   display: block;\n   width: 100%;\n   margin-bottom:${props => props.theme.space[4]}px;\n`;\n\nexport const Rating = styled.span`\n   display: block;\n   position:absolute;\n   left:10px;\n   top:10px;\n   width:30px;\n   margin-bottom:${props => props.theme.space[4]}px;\n   padding:${props => props.theme.space[2]}px;\n   border-radius: ${props => props.theme.radii.normal};\n   color: ${({ rating }) => (rating >= 3 && rating <= 7 ? 'text' : 'white')};\n\n   background-color: ${({ rating }) => {\n    if (rating > 7) {\n      return 'green';\n    }\n    if (rating >= 3 && rating <= 7) {\n      return 'yellow';\n    }\n    return 'red';\n  }};\n`;\n\nexport const Title = styled.p`\n   display: block;\n   margin-bottom:${props => props.theme.space[4]}px;\n   font-size:  ${props => props.theme.fontSizes.s};\n`;","import { useLocation } from 'react-router-dom';\nimport { Item, MovieLink, Image, Title, Rating } from './MoviesList.styled';\nimport noImage from '../../images/noImage.PNG';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ movie: { id, poster_path, original_title, vote_average, release_date} }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={location}>\n        <Image src={poster_path ? `https://image.tmdb.org/t/p/w342${poster_path}`: noImage} alt={original_title}/>\n        <Title>{`${original_title} (${release_date.substring(0, 4)})`}</Title>\n        <Rating rating={vote_average.toFixed(2)}> {vote_average.toFixed(2)}</Rating>\n      </MovieLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n  }).isRequired,\n};","import { MovieItem } from './MovieItem';\nimport { MoviesListStyle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ moviesData }) => {\n    return (\n        <MoviesListStyle>\n            {moviesData.map(movie => (\n                <MovieItem key={movie.id} movie={movie} />\n            ))}\n        </MoviesListStyle>\n    );\n};\n\nMoviesList.propTypes = {\n  moviesData: PropTypes.array.isRequired,\n};","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content:center;\n  margin: ${props => props.theme.space[5]}px;\n`;\n\nexport const Input = styled.input`\n  max-width: 300px;\n  height: 35px;\n  width: 100%;\n  border-radius: ${props => props.theme.radii.normal};\n  font-size:  ${props => props.theme.fontSizes.m};\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  margin-left: ${props => props.theme.space[3]}px;\n  width: 120px;\n  border-radius: ${props => props.theme.radii.normal};\n  background-color: ${props => props.theme.colors.blue};\n  color:${props => props.theme.colors.white};\n  border: none;\n  font-size:  ${props => props.theme.fontSizes.m};\n`;","import { useState } from 'react';\nimport { Form, Input, Button } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchMovie, setSearchMovie] = useState();\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchMovie.trim().toLowerCase());\n  };\n    \n  const onInputChange = ({ target }) => {\n     setSearchMovie(target.value);\n  };\n\n  return (\n      <Form onSubmit={onFormSubmit}\n            autoComplete=\"off\">\n      <Input\n        type=\"text\"\n        value={searchMovie}\n        onChange={onInputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n  font-size:  ${props => props.theme.fontSizes.l};\n  font-weight:${props => props.theme.fontWeights.bold};\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovies } from '../../utils/api';\nimport { Box } from \"../../components/Box/Box\";\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Message } from './Movies.styled';\n\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [status, setStatus] = useState('idle');\n  const [movies, setMovies] = useState(null);\n \n\n  useEffect(() => {\n    const searchMovie = searchParams.get('query');\n    if (!searchMovie) {\n        return setStatus('idle');\n    }\n    setStatus('pending');\n\n    getMovies(searchMovie)\n      .then(result => {\n        setMovies(result);\n        setStatus('resolved');\n      })\n      .catch(() => setStatus('rejected'));\n  }, [searchParams]);\n\n     const onFormSubmit = value => {\n       setSearchParams(value ? { query: value } : {});\n     };\n\n  return (\n    <Box>\n        <SearchForm onSubmit={onFormSubmit}/>\n        {status === 'idle' && <Message>{`Введіть назву фільма`}</Message>}\n        {status === 'pending' && <Loader />}\n        {status === 'rejected' && (<Message>Щось пішло не так</Message>)}\n        {status === 'resolved' && movies.length === 0 && (<Message>{`Не знайдено, спробуй ще`}</Message>)}\n        {status === 'resolved' && <MoviesList moviesData={movies} />}\n    </Box>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst KEY = '324a07cbf11f3aed45ef70fac807eb23';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport async function getPopularMovies(page) {\n  const response = await axios.get('/trending/movie/week', {\n    params: { ...axios.defaults.params, page },\n  })\n  return response.data;\n}\n\nexport async function getMovies(query) {\n  const { data } = await axios.get(`/search/movie?&query=${query}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`);\n  return data;\n}\n\nexport async function getCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`);\n  return data.cast;\n}\n\nexport async function getReviews(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`);\n  return data.results;\n}"],"names":["MoviesListStyle","styled","Item","props","theme","space","colors","lightGrey","radii","normal","shadows","MovieLink","Link","fontSizes","s","fontWeights","bold","text","Image","Rating","rating","Title","MovieItem","movie","id","poster_path","original_title","vote_average","release_date","location","useLocation","to","state","src","noImage","alt","substring","toFixed","MoviesList","moviesData","map","Form","Input","m","Button","blue","white","SearchForm","onSubmit","useState","searchMovie","setSearchMovie","event","preventDefault","trim","toLowerCase","autoComplete","type","value","onChange","target","Message","l","useSearchParams","searchParams","setSearchParams","status","setStatus","movies","setMovies","useEffect","get","getMovies","then","result","catch","Box","query","Loader","length","getPopularMovies","page","axios","params","response","data","results","getMovieDetails","movieId","getCast","cast","getReviews","api_key"],"sourceRoot":""}