{"version":3,"file":"static/js/118.514eb13e.chunk.js","mappings":"8NAGaA,EAAkBC,EAAAA,GAAAA,GAAH,4HAQfC,EAAOD,EAAAA,GAAAA,GAAH,iXAIA,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACJ,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACD,SAAAF,GAAK,OAAIA,EAAMC,MAAME,OAAOC,SAAvB,IACR,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,MAAMC,MAAtB,IAMN,SAAAN,GAAK,OAAIA,EAAMC,MAAMM,QAAQD,MAAxB,IAIVE,GAAYV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,qKAIH,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACR,SAAAF,GAAK,OAAIA,EAAMC,MAAMS,UAAUC,CAA1B,IACL,SAAAX,GAAK,OAAIA,EAAMC,MAAMW,YAAYC,IAA5B,IACX,SAAAb,GAAK,OAAIA,EAAMC,MAAME,OAAOW,IAAvB,IAGFC,EAAQjB,EAAAA,GAAAA,IAAH,sFAGC,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IAGXc,EAASlB,EAAAA,GAAAA,KAAH,iOAMA,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACX,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACE,SAAAF,GAAK,OAAIA,EAAMC,MAAMI,MAAMC,MAAtB,IACb,gBAAGW,EAAH,EAAGA,OAAH,OAAiBA,GAAU,GAAKA,GAAU,EAAI,OAAS,OAAvD,IAEW,YAAiB,IAAdA,EAAa,EAAbA,OACtB,OAAIA,EAAS,EACJ,QAELA,GAAU,GAAKA,GAAU,EACpB,SAEF,KACR,IAGUC,EAAQpB,EAAAA,GAAAA,EAAH,0FAEC,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACP,SAAAF,GAAK,OAAIA,EAAMC,MAAMS,UAAUC,CAA1B,I,mBChETQ,EAAY,SAAC,GAA+E,IAAD,IAA5EC,MAASC,EAAmE,EAAnEA,GAAIC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,eAAgBC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,aAC5EC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC5B,EAAD,WACE,UAACS,EAAD,CAAWoB,GAAE,kBAAaP,GAAMQ,MAAOH,EAAvC,WACE,SAACX,EAAD,CAAOe,IAAKR,EAAW,yCAAqCA,GAAeS,EAASC,IAAKT,KACzF,SAACL,EAAD,oBAAWK,EAAX,aAA8BE,EAAaQ,UAAU,EAAG,GAAxD,QACA,UAACjB,EAAD,CAAQC,OAAQO,EAAaU,QAAQ,GAArC,cAA2CV,EAAaU,QAAQ,UAIvE,ECbYC,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzB,OACI,SAACvC,EAAD,UACKuC,EAAWC,KAAI,SAAAjB,GAAK,OACjB,SAACD,EAAD,CAA0BC,MAAOA,GAAjBA,EAAMC,GADL,KAKhC,C,0HCVYiB,E,QAAUxC,GAAAA,EAAH,uFAEJ,SAAAE,GAAK,OAAIA,EAAMC,MAAMS,UAAU6B,CAA1B,IACL,SAAAvC,GAAK,OAAIA,EAAMC,MAAMW,YAAYC,IAA5B,I,SCkBrB,EAlBgB,WACd,OAA4B2B,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAU,UAAGC,aAAaC,QAAQ,kBAAxB,QAAsC,KAChDC,EAAaC,KAAKC,MAAML,GAC9BF,EAAUK,EACX,GAAE,KAGD,SAACG,EAAA,EAAD,CAAKC,EAAG,GAAR,SACGV,GAA4B,IAAlBA,EAAOW,QAAgB,SAACjB,EAAA,EAAD,CAAYC,WAAYK,KAE1D,SAACH,EAAD,0KAGL,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MovieItem.jsx","components/MoviesList/MoviesList.jsx","pages/Library/Library.styled.jsx","pages/Library/Library.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListStyle = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  justify-content:center;\n  position: relative;\n  margin-right:${props => props.theme.space[5]}px;\n  margin-bottom:${props => props.theme.space[4]}px;\n  background-color: ${props => props.theme.colors.lightGrey};\n  border-radius: ${props => props.theme.radii.normal};\n  transform: scale(1);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: ${props => props.theme.shadows.normal};\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  width: 260px;\n  padding-bottom:${props => props.theme.space[4]}px;\n  font-size:  ${props => props.theme.fontSizes.s};\n  font-weight:${props => props.theme.fontWeights.bold};\n  color:${props => props.theme.colors.text};\n`;\n\nexport const Image = styled.img`\n   display: block;\n   width: 100%;\n   margin-bottom:${props => props.theme.space[4]}px;\n`;\n\nexport const Rating = styled.span`\n   display: block;\n   position:absolute;\n   left:10px;\n   top:10px;\n   width:30px;\n   margin-bottom:${props => props.theme.space[4]}px;\n   padding:${props => props.theme.space[2]}px;\n   border-radius: ${props => props.theme.radii.normal};\n   color: ${({ rating }) => (rating >= 3 && rating <= 7 ? 'text' : 'white')};\n\n   background-color: ${({ rating }) => {\n    if (rating > 7) {\n      return 'green';\n    }\n    if (rating >= 3 && rating <= 7) {\n      return 'yellow';\n    }\n    return 'red';\n  }};\n`;\n\nexport const Title = styled.p`\n   display: block;\n   margin-bottom:${props => props.theme.space[4]}px;\n   font-size:  ${props => props.theme.fontSizes.s};\n`;","import { useLocation } from 'react-router-dom';\nimport { Item, MovieLink, Image, Title, Rating } from './MoviesList.styled';\nimport noImage from '../../images/noImage.PNG';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ movie: { id, poster_path, original_title, vote_average, release_date} }) => {\n  const location = useLocation();\n\n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={location}>\n        <Image src={poster_path ? `https://image.tmdb.org/t/p/w342${poster_path}`: noImage} alt={original_title}/>\n        <Title>{`${original_title} (${release_date.substring(0, 4)})`}</Title>\n        <Rating rating={vote_average.toFixed(2)}> {vote_average.toFixed(2)}</Rating>\n      </MovieLink>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n  }).isRequired,\n};","import { MovieItem } from './MovieItem';\nimport { MoviesListStyle } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ moviesData }) => {\n    return (\n        <MoviesListStyle>\n            {moviesData.map(movie => (\n                <MovieItem key={movie.id} movie={movie} />\n            ))}\n        </MoviesListStyle>\n    );\n};\n\nMoviesList.propTypes = {\n  moviesData: PropTypes.array.isRequired,\n};","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  text-align: center;\n  font-size:  ${props => props.theme.fontSizes.l};\n  font-weight:${props => props.theme.fontWeights.bold};\n`;","import { useState, useEffect } from 'react';\nimport { Box } from \"../../components/Box/Box\";\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Message } from './Library.styled';\n\nconst Library = () => {\n  const [movies, setMovies] = useState(null);\n    \n  useEffect(() => {\n    const savedMovie = localStorage.getItem('myfilms') ?? '[]';\n    const parseMovie = JSON.parse(savedMovie);\n    setMovies(parseMovie);\n  }, []);\n\n  return (\n    <Box p={20}>\n      {movies && movies.length !== 0 ? (<MoviesList moviesData={movies} />\n      ) : (\n      <Message>Ще немає фільмів у бібліотеці</Message>)}\n    </Box>\n  );\n};\n\nexport default Library;"],"names":["MoviesListStyle","styled","Item","props","theme","space","colors","lightGrey","radii","normal","shadows","MovieLink","Link","fontSizes","s","fontWeights","bold","text","Image","Rating","rating","Title","MovieItem","movie","id","poster_path","original_title","vote_average","release_date","location","useLocation","to","state","src","noImage","alt","substring","toFixed","MoviesList","moviesData","map","Message","l","useState","movies","setMovies","useEffect","savedMovie","localStorage","getItem","parseMovie","JSON","parse","Box","p","length"],"sourceRoot":""}